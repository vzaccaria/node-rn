#!/usr/bin/env node
// Generated by LiveScript 1.3.1
(function(){
  var docopt, _, fs, path, shelljs, doc, getOption, o, go, from, tto, files, processed, reFrom, matched, final;
  docopt = require('docopt').docopt;
  _ = require('lodash');
  fs = require('fs');
  path = require('path');
  shelljs = require('shelljs');
  doc = shelljs.cat(__dirname + "/docs/usage.md");
  getOption = function(a, b, def, o){
    if (!o[a] && !o[b]) {
      return def;
    } else {
      return o[b];
    }
  };
  o = docopt(doc);
  go = getOption('-g', '--go', false, o);
  from = o["FROM"];
  tto = o["TO"];
  files = o["FILES"];
  if (o['ls'] || o['list']) {
    console.log("ls");
  } else {
    from = from.replace(/\*/, "(.*)");
    tto = tto.replace(/\*/, "$1");
    processed = _.map(files, function(it){
      it = path.normalize(it);
      return {
        original: it,
        basename: path.basename(it),
        dirname: path.dirname(it),
        basenameNoext: path.basename(it, path.extname(it))
      };
    });
    reFrom = new RegExp(from);
    matched = _.filter(processed, function(it){
      return reFrom.exec(it.basename);
    });
    final = matched.map(function(it){
      return _.extend(it, {
        newName: it.basename.replace(reFrom, tto)
      });
    });
    if (!go) {
      _.forEach(final, function(it){
        return console.log("From: " + it.original + " to " + it.dirname + "/" + it.newName);
      });
    } else {
      console.log("Should be doing something here");
    }
  }
}).call(this);
